/* Premium Glass Morphism Design System */

@layer components {
  /* Multi-layer glass card base */
  .premium-glass-card {
    --glass-blur: 24px;
    --glass-saturation: 180%;
    --border-width: 1px;
    --border-opacity: 0.15;
    --glow-color: rgba(212, 175, 55, 0.4);
    
    position: relative;
    border-radius: clamp(1rem, 2vw, 1.5rem);
    padding: clamp(1.5rem, 3vw, 2.5rem);
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
    transform-style: preserve-3d;
    perspective: 1000px;
  }

  .premium-glass-layers {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
  }

  /* Base glass effect with multiple backdrop filters */
  .premium-glass-base {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.08) 0%,
      rgba(255, 255, 255, 0.03) 40%,
      rgba(255, 255, 255, 0.01) 100%
    );
    backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
    -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
  }

  /* Animated noise texture for premium feel */
  .premium-glass-noise {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    opacity: 0.03;
    mix-blend-mode: overlay;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)'/%3E%3C/svg%3E");
    animation: noise-shift 8s steps(10) infinite;
  }

  /* Gradient overlay for depth */
  .premium-glass-gradient {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: radial-gradient(
      ellipse at top left,
      rgba(212, 175, 55, 0.08) 0%,
      transparent 50%
    ),
    radial-gradient(
      ellipse at bottom right,
      rgba(138, 155, 168, 0.08) 0%,
      transparent 50%
    );
    opacity: 0.6;
    transition: opacity 0.3s ease;
  }

  /* Animated border with gradient */
  .premium-glass-border-glow {
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(
      135deg,
      rgba(212, 175, 55, 0.5),
      rgba(138, 155, 168, 0.3),
      rgba(212, 175, 55, 0.2),
      rgba(255, 255, 255, 0.1)
    );
    background-size: 200% 200%;
    animation: gradient-shift 4s ease infinite;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
    -webkit-mask-composite: xor;
  }

  /* Inner glow effect */
  .premium-glass-inner-glow {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: radial-gradient(
      circle at center,
      transparent 0%,
      rgba(212, 175, 55, 0.03) 100%
    );
    box-shadow: 
      inset 0 0 20px rgba(212, 175, 55, 0.05),
      inset 0 0 40px rgba(255, 255, 255, 0.02);
  }

  /* Interactive shimmer overlay */
  .premium-glass-shimmer {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 2;
  }

  .premium-glass-card:hover .premium-glass-shimmer {
    opacity: 1;
  }

  /* Elevated variant with complex shadows */
  .premium-glass-elevated {
    box-shadow:
      0 0 0 1px rgba(255, 255, 255, 0.1),
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 0 40px rgba(212, 175, 55, 0.05),
      0 0 80px rgba(212, 175, 55, 0.03);
  }

  .premium-glass-elevated:hover {
    box-shadow:
      0 0 0 1px rgba(255, 255, 255, 0.2),
      0 4px 6px -1px rgba(0, 0, 0, 0.15),
      0 10px 15px -3px rgba(0, 0, 0, 0.15),
      0 25px 35px -5px rgba(0, 0, 0, 0.15),
      0 0 60px rgba(212, 175, 55, 0.1),
      0 0 120px rgba(212, 175, 55, 0.05);
    transform: translateY(-2px);
  }

  /* Floating variant with levitation effect */
  .premium-glass-floating {
    animation: float-gentle 6s ease-in-out infinite;
    box-shadow:
      0 0 0 1px rgba(255, 255, 255, 0.1),
      0 20px 40px -10px rgba(0, 0, 0, 0.3),
      0 40px 80px -20px rgba(212, 175, 55, 0.15);
  }

  /* Premium button styles */
  .premium-btn {
    --btn-height: clamp(2.75rem, 5vw, 3.5rem);
    --btn-padding-x: clamp(1.5rem, 3vw, 2.5rem);
    --btn-font-size: clamp(0.875rem, 1.5vw, 1.125rem);
    
    position: relative;
    height: var(--btn-height);
    padding: 0 var(--btn-padding-x);
    font-size: var(--btn-font-size);
    font-weight: 600;
    letter-spacing: 0.025em;
    border-radius: calc(var(--btn-height) / 2);
    transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
    transform-style: preserve-3d;
    overflow: hidden;
  }

  .premium-btn::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(212, 175, 55, 0.3) 0%,
      rgba(138, 155, 168, 0.2) 50%,
      rgba(212, 175, 55, 0.3) 100%
    );
    background-size: 200% 200%;
    animation: gradient-shift 3s ease infinite;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .premium-btn:hover::before {
    opacity: 1;
  }

  .premium-btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background: radial-gradient(
      circle at center,
      rgba(255, 255, 255, 0.3) 0%,
      transparent 70%
    );
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .premium-btn:active::after {
    transform: translate(-50%, -50%) scale(2);
    opacity: 0;
    transition: transform 0.3s, opacity 0.6s;
  }
}

/* Keyframe animations */
@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes noise-shift {
  0%, 100% { transform: translate(0, 0); }
  10% { transform: translate(-5%, -5%); }
  20% { transform: translate(-10%, 5%); }
  30% { transform: translate(5%, -10%); }
  40% { transform: translate(-5%, 15%); }
  50% { transform: translate(-10%, 5%); }
  60% { transform: translate(15%, 0); }
  70% { transform: translate(0, 10%); }
  80% { transform: translate(-15%, 0); }
  90% { transform: translate(10%, 5%); }
}

@keyframes float-gentle {
  0%, 100% { 
    transform: translateY(0) rotate(0deg);
  }
  33% { 
    transform: translateY(-10px) rotate(1deg);
  }
  66% { 
    transform: translateY(-5px) rotate(-1deg);
  }
}

/* Dark mode adjustments */
.dark .premium-glass-base {
  background: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0.4) 0%,
    rgba(0, 0, 0, 0.2) 40%,
    rgba(0, 0, 0, 0.1) 100%
  );
}

.dark .premium-glass-gradient {
  background: radial-gradient(
    ellipse at top left,
    rgba(251, 191, 36, 0.12) 0%,
    transparent 50%
  ),
  radial-gradient(
    ellipse at bottom right,
    rgba(138, 155, 168, 0.12) 0%,
    transparent 50%
  );
}

.dark .premium-glass-border-glow {
  background: linear-gradient(
    135deg,
    rgba(251, 191, 36, 0.6),
    rgba(138, 155, 168, 0.4),
    rgba(251, 191, 36, 0.3),
    rgba(255, 255, 255, 0.05)
  );
}

/* Responsive typography with clamp() */
.premium-heading {
  font-size: clamp(2rem, 5vw + 1rem, 4.5rem);
  line-height: clamp(2.5rem, 6vw + 1rem, 5rem);
  font-weight: 800;
  letter-spacing: -0.04em;
}

.premium-subheading {
  font-size: clamp(1.25rem, 3vw + 0.5rem, 2.25rem);
  line-height: clamp(1.75rem, 4vw + 0.5rem, 2.75rem);
  font-weight: 600;
  letter-spacing: -0.02em;
}

.premium-body {
  font-size: clamp(1rem, 2vw, 1.125rem);
  line-height: clamp(1.5rem, 3vw, 1.75rem);
  font-weight: 400;
  letter-spacing: -0.01em;
}

/* Advanced timing functions */
:root {
  --ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);
  --ease-in-out-expo: cubic-bezier(0.87, 0, 0.13, 1);
  --ease-out-back: cubic-bezier(0.34, 1.56, 0.64, 1);
  --ease-out-circ: cubic-bezier(0, 0.55, 0.45, 1);
  --ease-in-out-quint: cubic-bezier(0.83, 0, 0.17, 1);
  --spring-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --spring-smooth: cubic-bezier(0.23, 1, 0.32, 1);
}